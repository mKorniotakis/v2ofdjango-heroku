# Generated by Django 2.0.7 on 2020-04-28 08:06

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geomcol1', models.BinaryField(blank=True, db_column='GeomCol1', null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('lon', models.DecimalField(decimal_places=5, max_digits=10)),
                ('lat', models.DecimalField(decimal_places=5, max_digits=10)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('operatorname', models.CharField(blank=True, max_length=50, null=True)),
                ('mcc', models.CharField(blank=True, max_length=3, null=True)),
                ('mnc', models.CharField(blank=True, max_length=3, null=True)),
                ('node', models.CharField(blank=True, max_length=11, null=True)),
                ('cellid', models.CharField(blank=True, max_length=11, null=True)),
                ('lac', models.CharField(blank=True, max_length=11, null=True)),
                ('network_type', models.CharField(blank=True, max_length=2, null=True)),
                ('qual', models.IntegerField(blank=True, null=True)),
                ('snr', models.IntegerField(blank=True, null=True)),
                ('cqi', models.IntegerField(blank=True, null=True)),
                ('lterssi', models.IntegerField(blank=True, null=True)),
                ('appversioncode', models.IntegerField(blank=True, null=True)),
                ('psc', models.IntegerField(blank=True, null=True)),
                ('dl_bitrate', models.IntegerField(blank=True, null=True)),
                ('ul_bitrate', models.IntegerField(blank=True, null=True)),
                ('nlac1', models.IntegerField(blank=True, null=True)),
                ('ncellid1', models.IntegerField(blank=True, null=True)),
                ('nrxlev1', models.IntegerField(blank=True, null=True)),
                ('nlac2', models.IntegerField(blank=True, null=True)),
                ('ncellid2', models.IntegerField(blank=True, null=True)),
                ('nrxlev2', models.IntegerField(blank=True, null=True)),
                ('nlac3', models.IntegerField(blank=True, null=True)),
                ('ncellid3', models.IntegerField(blank=True, null=True)),
                ('nrxlev3', models.IntegerField(blank=True, null=True)),
                ('nlac4', models.IntegerField(blank=True, null=True)),
                ('ncellid4', models.IntegerField(blank=True, null=True)),
                ('nrxlev4', models.IntegerField(blank=True, null=True)),
                ('nlac5', models.IntegerField(blank=True, null=True)),
                ('ncellid5', models.IntegerField(blank=True, null=True)),
                ('nrxlev5', models.IntegerField(blank=True, null=True)),
                ('nlac6', models.IntegerField(blank=True, null=True)),
                ('ncellid6', models.IntegerField(blank=True, null=True)),
                ('nrxlev6', models.IntegerField(blank=True, null=True)),
                ('ctime', models.DateTimeField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=20, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('locationsource', models.CharField(blank=True, max_length=2, null=True)),
                ('altitude', models.IntegerField(blank=True, null=True)),
                ('conntype', models.CharField(blank=True, max_length=5, null=True)),
                ('conninfo', models.CharField(blank=True, max_length=25, null=True)),
                ('avgping', models.IntegerField(blank=True, null=True)),
                ('minping', models.IntegerField(blank=True, null=True)),
                ('maxping', models.IntegerField(blank=True, null=True)),
                ('stdevping', models.IntegerField(blank=True, null=True)),
                ('pingloss', models.IntegerField(blank=True, null=True)),
                ('testdlbitrate', models.IntegerField(blank=True, null=True)),
                ('testulbitrate', models.IntegerField(blank=True, null=True)),
                ('geomcol2', django.contrib.gis.db.models.fields.GeometryField(blank=True, db_column='GeomCol2', null=True, srid=0)),
                ('devicemanufacturer', models.CharField(blank=True, db_column='DeviceManufacturer', max_length=30, null=True)),
                ('devicemodel', models.CharField(blank=True, db_column='DeviceModel', max_length=30, null=True)),
                ('devicename', models.CharField(blank=True, db_column='DeviceName', max_length=30, null=True)),
                ('versionname', models.CharField(blank=True, db_column='VersionName', max_length=30, null=True)),
                ('brand', models.CharField(blank=True, db_column='Brand', max_length=30, null=True)),
                ('androidversion', models.CharField(blank=True, db_column='AndroidVersion', max_length=30, null=True)),
                ('servingcelltime', models.IntegerField(blank=True, db_column='ServingCellTime', null=True)),
                ('os', models.CharField(blank=True, max_length=30, null=True)),
                ('os_id', models.CharField(blank=True, max_length=128, null=True)),
                ('ssid', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': 'Measurements',
                'db_table': 'Measurements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfAreas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
                ('area', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'verbose_name_plural': 'v2of_areas',
                'db_table': 'v2of_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfCampaigns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_campaigns',
                'db_table': 'v2of_campaigns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfCollections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('geomcol1', models.BinaryField(blank=True, null=True)),
                ('geomcol2', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('time_tx', models.DateTimeField(blank=True, null=True)),
                ('time_rx', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_collections',
                'db_table': 'v2of_collections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfDevices',
            fields=[
                ('android_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=16, unique=True)),
                ('device_serial', models.CharField(max_length=16)),
                ('device_mac', models.TextField()),
                ('device_brand', models.CharField(blank=True, max_length=30, null=True)),
                ('device_model', models.CharField(blank=True, max_length=30, null=True)),
                ('device_product', models.CharField(blank=True, max_length=30, null=True)),
                ('device_build_id', models.CharField(blank=True, max_length=30, null=True)),
                ('os', models.CharField(blank=True, max_length=30, null=True)),
                ('os_version', models.CharField(blank=True, max_length=30, null=True)),
                ('os_id', models.CharField(blank=True, max_length=128, null=True)),
                ('subscriber_id', models.CharField(max_length=16)),
                ('uuid', models.UUIDField()),
                ('id', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_devices',
                'db_table': 'v2of_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfMeasurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'verbose_name_plural': 'v2of_measurements',
                'db_table': 'v2of_measurements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_metrics',
                'db_table': 'v2of_metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfUserRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_user_roles',
                'db_table': 'v2of_user_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V2OfUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('passwordformat', models.IntegerField(blank=True, null=True)),
                ('passwordsalt', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'v2of_users',
                'db_table': 'v2of_users',
                'managed': False,
            },
        ),
    ]
